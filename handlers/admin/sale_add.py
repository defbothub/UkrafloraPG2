from aiogram.types import ContentType, Message
from keyboards.default.markups import *
from handlers.user.menu import sale_setting
from loader import dp, db, bot
from utils.db.models import Promotion
from filters import IsAdmin
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from handlers.user.menu import markup_admin

class PromotionState(StatesGroup):
    add_promotion_description = State()  # –î–æ–¥–∞–≤–∞–Ω–Ω—è –æ–ø–∏—Å—É –∞–∫—Ü—ñ—ó
    add_promotion_photo = State()  # –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ –∞–∫—Ü—ñ—ó


add_sale = '‚ûï –î–æ–¥–∞—Ç–∏ –∞–∫—Ü—ñ—é'
delete_sale = 'üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –∞–∫—Ü—ñ—é'
back_sale = 'üëà –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é'

# –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –æ–ø–∏—Å—É —Ç–∞ —Ñ–æ—Ç–æ –∞–∫—Ü—ñ—ó –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
def save_promotion_to_database(caption, photo_data):
    try:
        promotion = Promotion(caption=caption, photo=photo_data)
        db.db_session.add(promotion)
        db.db_session.commit()
        print("Promotion saved to the database successfully.")
    except Exception as e:
        print(f"Error saving promotion to the database: {e}")
        db.db_session.rollback()

# –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ "üî• –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∞–∫—Ü—ñ—ó"
@dp.message_handler(IsAdmin(), text=sale_setting)
async def process_settings(message: Message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(add_sale)
    markup.add(delete_sale)
    markup.add(back_sale)
    await message.answer('–ü–µ—Ä–µ–¥ –¥–æ–¥–∞–≤–∞–Ω–Ω—è–º –Ω–æ–≤–æ—ó –∞–∫—Ü—ñ—ó –≤–∏–¥–∞–ª—ñ—Ç—å –ø–æ–ø–µ—Ä–µ–¥–Ω—é.', reply_markup=markup)

# –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ "‚ûï –î–æ–¥–∞—Ç–∏ –∞–∫—Ü—ñ—é"
@dp.message_handler(IsAdmin(), text=add_sale)
async def add_promotion_handler(message: Message, state: FSMContext):
    await message.answer('–í–≤–µ–¥—ñ—Ç—å –æ–ø–∏—Å –∞–∫—Ü—ñ—ó:')
    await PromotionState.add_promotion_description.set()

# –í–≤–µ–¥–µ–Ω–Ω—è –æ–ø–∏—Å—É –∞–∫—Ü—ñ—ó
@dp.message_handler(IsAdmin(), state=PromotionState.add_promotion_description)
async def add_promotion_description_handler(message: Message, state: FSMContext):
    caption = message.text
    async with state.proxy() as data:
        data['description'] = caption
    await message.answer('–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ –∞–∫—Ü—ñ—ó:')
    await PromotionState.next()

@dp.message_handler(IsAdmin(), content_types=ContentType.PHOTO, state=PromotionState.add_promotion_photo)
async def add_promotion_photo_handler(message: Message, state: FSMContext):
    file_id = message.photo[-1].file_id
    file_info = await bot.get_file(file_id)
    photo_data = (await bot.download_file(file_info.file_path)).read()
    async with state.proxy() as data:
        caption = data['description']

    save_promotion_to_database(caption, photo_data)

    await state.finish()
    await message.answer('–ê–∫—Ü—ñ—é –¥–æ–¥–∞–Ω–æ!', reply_markup=markup_admin)

#  "üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –∞–∫—Ü—ñ—é"
@dp.message_handler(IsAdmin(), text=delete_sale)
async def delete_promotion_handler(message: Message):
    # –û—á–∏—Å—Ç–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é promotions
    db.db_session.query(Promotion).delete()
    db.db_session.commit()
    await message.answer('–¢–∞–±–ª–∏—Ü—é –∞–∫—Ü—ñ–π –æ—á–∏—â–µ–Ω–æ!\n–¢–µ–ø–µ—Ä –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –Ω–æ–≤—É –∞–∫—Ü—ñ—é.')

#  –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
@dp.message_handler(IsAdmin(), text=back_sale)
async def to_admin_menu(message: Message):
    await message.answer('–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é.', reply_markup=markup_admin)
